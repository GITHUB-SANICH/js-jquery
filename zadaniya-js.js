//const { data } = require("jquery");

//const { each } = require("jquery");

console.log(
  'В теме "Циклы" отсутствует 4-е задание - пропущенно при копировании с сайта'
);

const bodyElement = document.body;
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<h3>Задания по курсу JavaScript.</h3>"
);

{ //заглушка по выполненным заданиям
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему JavaScript - Базовые понятия</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Вывод информации</b></h3><hr><br>"
);
/*Текст задания: 
	Вывод информации
	Создайте программу, которая выведет на экран значения: "Иван", 35, true.
	Каждое значение выводить с новой строки. Для вывода не используйте переменные.
*/
console.log("Вывод значений: ");
console.log("Иван");
console.log(35);
console.log(true);

/*Решение в решебнике:
	//console.log("Иван")
	//console.log(35)
	//console.log(true)
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Вывод даты<b></b></h3><hr><br>"
);
/*Текст задания: 
Выведите в консоль поточную дату в следующем формате: m-dd-yyyy.
Для реализации задания используйте класс Date.
*/
var now_time = new Date();
let countDays =
  now_time.getDate() < 10 ? "0" + now_time.getDate() : now_time.getDate();
console.log(
  "Вывод текущего времени: " +
    (now_time.getMonth() + 1) +
    "-" +
    countDays +
    "-" +
    now_time.getFullYear()
);

/*Решение в решебнике:
// Создаем объект на основе класса Date
	var today = new Date();
// Получаем нынешний день
	var day = today.getDate();
// Получаем нынешний месяц
// Здесь отсчет идет с нуля, поэтому добавляем +1
	var month= today.getMonth() + 1; 
// Получаем нынешний год
	var year = today.getFullYear();
// Если день менее 10, то перед числом еще 
// будем писать 0
if(day < 10) 
	day = '0' + day;

// Создаем переменную в формате: m-dd-yyyy
today = month + '-' + day + '-' + year;

// Выводим дату
console.log(today);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: URL страницы<b></b></h3><hr><br>"
);
/*Текст задания: 
URL страницы
Выведите в консоль полный URL страницы вашего сайта.
*/
console.log("URL сайта: " + document.URL);
/*Решение в решебнике:
//	сonsole.log(document.URL);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Разделение числа на символы<b></b></h3><hr><br>"
);
/*Текст задания: 
Напишите программу, которая будет получать от пользователя число с 4 числами.
Реализуйте разделение этого числа на отдельные цифры. 

Пример:
// Число 5934
// Результат 5, 9, 3, 4
Важно: число вводит пользователь со всплывающего окна.
*/

var chisl = prompt("Введите целое число с 4 цифрами:", 1234);
//проверяем введенное значенеи и вводимое число, так как prompt всегда возвратщает string
num_chisl = Number(chisl);
(chisl.length == 4) ? true : alert('Введите число из 4-х символов');
if (num_chisl * 0 == 0){
	var symbolComm = "";
	for (let index = 0; index < chisl.length; index++) {
		var if_comma = index == chisl.length - 1 ? "" : ", ";
		symbolComm += chisl[index] + if_comma;
	}
	//вывод результата
	//alert(symbolComm);
	console.log(symbolComm);
} else {
	alert('Введенное значение не является целым числом');
}

/*Решение в решебнике:
// Получаем число от пользователя
	var num = prompt("Введите число с 4 цифрами:");
// Разделяем и получаем первое число
// Также округляем, чтобы получить целое число
	var n1 = Math.floor(num / 1000 % 10);
// Разделяем и получаем второе число
	var n2 = Math.floor(num / 100 % 10);
// Разделяем и получаем третье число
	var n3 = Math.floor(num / 10 % 10);
// Разделяем и получаем четвертое число
	var n4 = Math.floor(num % 10);
// Выводим все в консоль
	console.log(n1 + ", " + n2 + ", " + n3 + ", " + n4);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Нахождение числа<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте программу, которая будет принимать число (n), введенное пользователем, и выдавать результат в виде (n + n * 2).
Пример:
// Вводим 23
// Получаем: 2346
*/
var chisl_1_5 = prompt("Введите целое число с 2 цифрами:", 12);
(chisl_1_5.length == 2) ? true : alert('Введите число из 2-х символов');
num_chisl_1_5 = Number(chisl_1_5);
(num_chisl_1_5 * 0 == 0) ? console.log('Результат: ' + (chisl_1_5 + (chisl_1_5 * 2))) : alert('Введенное значение не является целым числом');

/*Решение в решебнике:
// Получаем число от пользователя
	var num = prompt("Введите число:");
// Превращаем данные от пользователя в число
	var n1 = parseInt(num);
// Вторая переменная содержит число от пользователя, умноженное на два
	var n2 = parseInt(num * 2);
// Выводим результат
	console.log(n1 + n2);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №6: Работа с переменными<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте переменную со значением 46 и переменную со значением "string". Умножьте числовую переменную на 5.
Выведите в консоль обе переменные.
*/
var num46 = 46;
var strString = "string";
num46 = num46 * 5;
console.log("Переменная числа: " + num46 + ", Переменая строки: " + strString);
/*Решение в решебнике:
	var num = 46;
	var word = "string";
	num *= 5;
	console.log(num);
	console.log(word);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №7: Доменное имя<b></b></h3><hr><br>"
);
/*Текст задания: 
Попросите пользователя ввести URL какого-либо сайта. После ввода данных выведите в консоль доменное имя полученного URL адреса.
Пример:
// Получил значение - itproger.com
// в консоль будет выведено - com
Подсказка: стоит использовать функцию split.
*/
var url_promt = prompt("Введите URL какого-либо сайта:", 'https://pnzgu.ru');
var arr_url_promt = url_promt.split('.');
console.log('Домен 2-го уровня: '+arr_url_promt[1]);
/*Решение в решебнике:
	var website = prompt("Введите адрес сайта: ");
	var split = website.split('.'); // Разделяем слово по символу точка
// Выводим второй элемент из получившегося массива
	console.log("Доменное имя: ." + split[1]);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №8: Простые переменные<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте переменные со значениями: 5, F, Привет, 90.2.
Создайте переменную, которую нельзя будет изменить и установите ей значение 67.
Выведите переменную со значением "Привет" на экран.
*/

var var1_8_1 = 5;
var var1_8_2 = 'F';
var var1_8_3 = 'Привет';
var var1_8_4 = 90.2;
const var1_8_5 = 67;
console.log('Константа: '+var1_8_5);

/*Решение в решебнике:
// Создание переменных
	var x = 5; // Целое число
	var symbol = 'F'; // Только символ
	var word = "Привет"; // Строковая переменная
	var d = 90.2; // Число с точкой
// Создание константы
	const MY_FAV = 67;
	console.log(word);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Циклы'</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Когда воскресенье?<b> </b></h3><hr><br>"
);
/*Текст задания: 
	Когда воскресенье?
	Написать программу, подсчитывающую количество четных и нечетных цифр в числе.
	Число задает пользователь с клавиатуры.
*/

var var2_1 = prompt("Введите целое число с 1-й цифрой:", 7);
if (var2_1.length == 1) {
	var var2_1_chet = 0;
	var var2_1_nechet = 0;
	for (let index = 0; index < var2_1; index++) {
		((index+1)%2 == 0) ? var2_1_chet++ : var2_1_nechet++;
	}
	console.log('Четные числа: '+var2_1_chet+', '+'Нечетные числа: '+var2_1_nechet);
} else {
	console.log('Введите число не больше 9-ти');
}

/*Решение в решебнике:
//Описание переменных: 
//    even - количество четных цифр;
//    odd - количество нечетных цифр.
//Алгоритм решения задачи:
//    Если число делится без остатка на 2, значит последняя цифра четная (увеличиваем переменную even). Иначе - нечетная (тогда odd + 1).
//    Избавляемся от младшего разряда в числе: операция div на 10.
	var even = 0;
	var odd = 0;
	console.log("Введите число: ")
// Получение число от пользователя
	var user_num = prompt("Укажите число");
// Мы будем делить число на 10,
// поэтому цикл будет работать пока число user_num будет больше за 0
	while(user_num > 0) {
	// Проверяем является ли число четным 
	// Для этого получаем остаток при делении на 2
	if (user_num % 2 == 0)
		even += 1; // Если четное, то +1 к переменной четных чисел
	else
		odd += 1; // Если не четное, то +1 к переменной не четных чисел
	// Число делим на 10 и округляем, чтобы получить число без последней цифры
	user_num = Math.floor(user_num / 10);
	}

// Выводим все значения
	console.log("Четных: " + even);
	console.log("Не четных: " + odd);
*/
}
{ //заглушка по невыполненным заданиям
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Сумма чисел<b></b></h3><hr><br>"
);
/*Текст задания: 
Найдите сумму чисел от 1 до 100, которые кратны 4.
*/

/*Решение в решебнике:
////var sum = 0;
////
////// Создаем цикл от 1 до 100 включительно
////for (var x = 0; x < 100; x++) {
////   // Проверяем кратно ли число 4
////    if (x % 4 == 0)
////       // Если да, то добавляем в общую сумму
////       sum += x;
////}
////
////// Выводим сумму на экран
////console.log(sum);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Обратный отсчёт<b></b></h3><hr><br>"
);
/*Текст задания: 
Выведите в цикле while следующую последовательность:
	13, 12, 11, 9, 8, 7, 6, 5, 4, 3, 2, 1
Важно чтобы сохранились пробелы и запятые после выполнения цикла.
*/

/*Решение в решебнике:
////// Переменная что будет содержать все числа
////var nums = "";
////
////// Цикл будет идти от 0 до 13
////var i = 13;
////// Создаем цикл
////while (i > 0) {
////	// Если число будет равным 10,
////	// то пропускаем итерацию в цикле.
////	// Нам просто не нужно выводить число 10 в итоговм результате
////	if (i == 10) {
////		i--;
////		continue;
////	}
////	// Переменная что добавляет запятую
////	comma = "";
////	// Если сейчас число не равно 1, то будем прописывать запятую
////	if (i != 1)
////		// В переменную добавляем запятую и пробел 
////		comma = ", ";
////		
////	// Записываем все в строку
////	nums += i + comma;
////	// Уменьшаем переменную на -1
////	i--;
////}
////
////// Выводим все числа
////console.log (nums);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Депозитный калькулятор<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте программу «Депозитный калькулятор», которая будет рассчитывать ежегодную и итоговую сумму вклада с учетом процентной ставки банка.
Пример:
Сумма: 1250
Годы: 5
Процент: 12
1 год - 1400
2 год - 1568
3 год - 1756
4 год - 1966
После 4 лет сумма будет - 1966
*/

/*Решение в решебнике:
////var price = prompt("Сумма:"); // Запрашиваем сумму
////var years = prompt("Годы:"); // Запрашиваем годы
////var procent = prompt("Процент:"); // Запрашиваем проценты
////
////// Вычисляем проценты за каждый год
////for (var i = 1; i < years; i++) {
////	// Вычисление процента за каждый год
////	price *= 1 + procent / 100;
////	// Выводим все в консоль
////	console.log(i + " год - " + Math.round(price));
////}
////
////// Выводим все в консоль
////console.log("После " + (i - 1) + " лет сумма будет - " + Math.round(price*(1 + procent / 100)));
////}
////
////// Выводим все числа
////console.log (nums);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №6: Делители числа<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте программу, которая запрашивает произвольное число у пользователя и выводит список чисел, которые являются делителями данного числа без остатка.

Например: пользователь вводит числа 45. Программа выводит числа, которые делятся не него без остатка:
1, 3, 5, 9, 15, 45

*/

/*Решение в решебнике:
////var num = prompt("Введите число: ");
////
////// Создаем список со всеми числами от 1 до числа, которое ввел пользователь
////var arr = new Array();
////for(var i = 0; i < num; i++)
////	arr[i] = i + 1;
////
////// Перебираем все числа из первого списка
////for(var i = 0; i < num; i++)
////	// Если число делиться без остатка, значит это и есть делитель этого числа
////	// Такое число выводим в консоли
////	if(num % arr[i] == 0)
////		console.log("Число делиться на - " + arr[i]);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №7: Нахождение суммы<b></b></h3><hr><br>"
);
/*Текст задания: 
Найдите сумму всех чисел от 5 до 57, исключив числа 34, 46 и 52.
Сделайте это при помощи цикла while и do while.
*/

/*Решение в решебнике:
////var x = 5; // Изначально начинаем с 5
////var count = 0; // Переменная для подсчета суммы
////while(x <= 57) { // Заходим в цикл
////	if(x == 34 || x == 46 || x == 52) { // Проверка на числа
////		x++; // Пропуск итерации
////		continue;
////	}
////
////	// Подсчет суммы и вывод на экран
////	count += x;
////	x++;
////	console.log("Сумма на данный момент: " + count);
////}
////
////var x = 5; // Изначально начинаем с 5
////var count = 0; // Переменная для подсчета суммы
////do { // Заходим в цикл
////	if(x == 34 || x == 46 || x == 52) { // Проверка на числа
////		x++; // Пропуск итерации
////		continue;
////	}
////
////	// Подсчет суммы и вывод на экран
////	count += x;
////	x++;
////	console.log("Сумма на данный момент: " + count);
////} while(x <= 57);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №8: Рисование циклами<b></b></h3><hr><br>"
);
/*Текст задания: 
Сделайте цикл, который нарисует следующее:
1
22
333
4444
55555
Количество рядов задает пользователь
*/

/*Решение в решебнике:
////var rows = prompt("Введите число");
////
////// Сначала проходим по первому циклу
////for(var i = 0; i < rows; i++) {
////	// В каждом цикле рисуем дополнительные числа
////	for (var j = 0; j < i; j++)
////		console.log(i);
////	console.log("");
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №9: Таблица умножения<b></b></h3><hr><br>"
);
/*Текст задания: 
Выведите на экран таблицу умножения числа 5. Сделайте таблицу через цикл for, while и do while, где число 5 будет умножаться от 1 до 10 включительно.
*/

/*Решение в решебнике:
////for (var i = 1; i <= 10; i++)
////	console.log("5 * " + i + " = " + 5 * i);
////	
////var i = 0;
////while(i <= 10) {
////	i++;
////	console.log("5 * " + i + " = " + 5 * i);
////}
////
////var i = 0;
////do {
////	i++;
////	console.log("5 * " + i + " = " + 5 * i);
////} while(i < 10);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Работа с массивами'</h3 ><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Объединение массива<b> </b></h3><hr><br>"
);
/*Текст задания: 
Используйте две разные встроенные функции в JavaScript, которые позволяют объединить массив в строку.

Пример массива:
cars = ["Audi", "Volvo", "BMW", "Mercedes"];
*/

/*Решение в решебнике:
////// Функция joint - объединяет все элементы по определенному символу
////console.log(cars.join(', '));
////// Функция toString - преобразовывает массив в строку
////console.log(cars.toString());
////
////// Функцию joint можно использовать и без параметров
////console.log(cars.join());
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Удаление элемента<b> </b></h3><hr><br>"
);
/*Текст задания: 
Удалите первый и последний элемент из массива:
arr = [ "a", "b", "c", "d", "e" ]
*/

/*Решение в решебнике:
////arr = [ "a", "b", "c", "d", "e" ];
////// Функция splice позволяет указать с какого индекс идет удаление
////// В нашем случае с индекс 0 и будет удален лишь 1 элемент
////arr.splice(0,1);
////// Функция pop всегда удаляет последний элемент в массиве
////arr.pop();
////console.log(arr);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Работа с массивом<b> </b></h3><hr><br>"
);
/*Текст задания: 
У вас есть массив:
arr = [ "a,b,c", "d", "e" ];

Разделите элементы в массиве и выведите следующий массив:
[ "a", "b", "c", "d", "e" ];
*/

/*Решение в решебнике:
////arr = [ "a,b,c", "d", "e" ];
////// Берём первый элемент из массива
////// При этом первый элемент в массиве arr будет удален
////var abc = arr.splice(0,1);
////// Преобразовываем 1 элемент в строку и далее
////// разделаем его на отдельный массив.
////// Элементы разделяются по запятым
////var abc2Arr = abc.toString().split(',');
////
////// Соединяем оба массива
////res = abc2Arr.concat(arr);
////console.log(res);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Почти самый маленький<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте программу, которая будет находить второй самый маленький элемент в массиве.

Массив данных:
var arr = new Array(24, -63, 67, -12, 88, 94, -28, 82, 0, 53);
*/

/*Решение в решебнике:
////var arr = new Array(24, -63, 67, -12, 88, 94, -28, 82, 0, 53);
////
////console.log("Массив: "); // Вывод массива на экран
////var text = ""; // Текст будет помещен сюда
////for (var i = 0; i < arr.length; i++) {
////    text += arr[i] + ", ";
////}
////console.log(text);
////
////// Дополнительный пропуск строки
////console.log(" ");
////
////var min = arr[0];
////var sec_min = arr[0];
////for (var i = 0; i < arr.length; i++) { // Перебираем весь массив
////    // Если данный элемент равен минимальному, то ставим его как второй минимальный
////    if(arr[i] == min)
////      sec_min = min;
////    // Если данный элемент меньше минимального, то предыдущий минимальный 
////    // теперь второй минимальный, а значение нового минимального меняем
////    else if (arr[i] < min) {
////        sec_min = min;
////        min = arr[i];
////    } else if (arr[i] < sec_min) // Если элемент меньше второго минимального, то указываем его
////        sec_min = arr[i];
////}
////console.log("Второй минимальный элемент: " + sec_min);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Двумерный массив<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте двумерный массив и выведите его на экран при помощи циклов while.
Двумерный массив данных:
var x = new Array(new Array(0, 34, 2), new Array(9, 12, 18), new Array(3, 4, 5));
*/

/*Решение в решебнике:
////var length = 3;
////var x = new Array(new Array(0, 34, 2), new Array(9, 12, 18), new Array(3, 4, 5));
////var i = 0;
////while(i < length) { // Перебераем первый массив
////    var j = 0;
////    while(j < length) { // Перебираем второй вложенный массив (0, 34, 2) и так далее
////        console.log(x[i][j]); // Выводим данные
////        j++;
////    }
////    console.log(" "); // Пропуск строки
////    i++;
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №6: Минимум и максимум<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте массив и выведите в консоль минимальный и максимальный элементы в этом массиве.

Массив данных:
var arr = new Array(24, -63, 67, -12, 88, 94, -28, 82, 0, 53);
*/

/*Решение в решебнике:
////var arr = new Array(24, -63, 67, -12, 88, 94, -28, 82, 0, 53);
////
////var max, min;
////
////max = arr[0]; // Изначально мин и макс пускай будет первый элемент
////min = arr[0];
////for(var r = 1; r < arr.length; r++) { // Перебираем весь массив
////  // Если есть элемент, который больше за нынешний максимум,
////  // то делаем этот элемент новым максимумом
////  if(max < arr[r])
////      max = arr[r];
////  // Если есть элемент, который меньше за нынешний минимум,
////  // то делаем этот элемент новым минимумом
////  if(min > arr[r]) 
////      min = arr[r];
////}
////// Выводим все в консоль
////console.log("Минимальный элемент: " + min);
////console.log("Максимальный элемент: " + max);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №7: Сортировка массива<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте программу, которая будет просить пользователя ввести размер массива, а также все значения элементов для массива.
После ввода данных массив будет сортироваться в порядке возрастания элементов. В конце программы выведите получившийся массив на экран.
Уточнение: получение значений от пользователя выполните через всплывающее окно prompt.
Важно: не используйте встроенные функции в JS для сортировки массива.

*/

/*Решение в решебнике:
////var arr = new Array(); // сам массив, изначально пустой
////var size; // размер массива
////
////// Ввод количества элементов массива
////size = prompt("Размер массива:");
////
////if (size <= 0) {
////    // Размер масива должен быть положитлеьным
////    console.log("Неверный размер");
////} else {
////  // заполнение массива
////  for (var i = 0; i < size; i++)
////      // Дополнительно переводим в числовую переменную, 
////      // чтобы можно было сравнивать как числа
////      arr[i] = parseInt(prompt("Введите элемент с индексом - " + i + ":"));
////
////  var temp; // временная переменная для обмена элементов местами
////
////  // Сортировка массива пузырьком
////  for (var i = 0; i < size - 1; i++) {
////      for (var j = 0; j < size - i - 1; j++) {
////          if (arr[j] > arr[j + 1]) {
////              // меняем элементы местами
////              temp = arr[j];
////              arr[j] = arr[j + 1];
////              arr[j + 1] = temp;
////          }
////      }
////  }
////
////  // Вывод отсортированного массива на экран
////  for (var i = 0; i < size; i++) {
////    console.log(arr[i]);
////  }
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №8: Обратный порядок<b> </b></h3><hr><br>"
);
/*Текст задания: 
Отсортируйте массив чисел в обратном порядке:
var arr = [9, 25, 78, 23, -43, 4];

// После сортировки:
// [ 78, 25, 23, 9, 4, -43 ]

При создании сортировки используйте встроенную JS функцию.
*/

/*Решение в решебнике:
////var arr = [9, 25, 78, 23, -43, 4];
////
////// Создаем функцию сортировку
////// В ней указываем обратный порядок
////function compareReversed(a, b) {
////  return b - a;
////}
////
////// При сортировке вызываем эту функцию
////arr.sort(compareReversed);
////console.log(arr);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Функции'</h3><hr><hr><br></br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Простые функции<b> </b></h3><hr><br>"
);

/*Текст задания: 
Создайте две функции:
    Первая будет выводить текст: «Всем привет!»;
    Вторая будет принимать параметр и выводить его на экран.

*/

/*Решение в решебнике:
////// Первая функция
////function welcome() {
////	console.log("Всем привет!");
////}
//// 
////// Вторая функция
////function print(str) {
////	console.log(str);
////}
////
////// Вызов функций
////welcome();
////print("Можете звать меня мистер Робот!");
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Умножение строк<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, что будет увеличивать строку саму на себя несколько раз. 
Пример:
strMultiply ("Task", 2) → "TaskTask"
strMultiply ("Task", 1) → "Task"
strMultiply ("Task", 3) → "TaskTaskTask"
*/

/*Решение в решебнике:
////// Принимает два параметра
////function strMultiply (str, n) {
////	var result = "";
////	// Создаем цикл вплоть до числа, что передано в функцию
////	for (var i = 0; i < n; i++)
////		// Добавляем текст несколько раз к переменной
////		result += str;
////		
////	// Возвращаем переменную
////	return result;
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Нахождение факториала<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет находить факториал числа.
*/

/*Решение в решебнике:
////function fact (x) { 
////	// Если передали число 0, то возвращаем число 1
////	if (x === 0)
////		return 1;
////	
////	// Иначе умножаем переменную на вызов этой же функции
////	return x * fact (x-1);
////}
////console.log(fact(5));
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Верхний регистр<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет превращать каждый первый символ строки в верхний регистр:
upFirstLetter ("все в верхний регистр");
// Вывод будет - "Все В Верхний Регистр"
*/

/*Решение в решебнике:
////// Функция что получает строку
////function upFirstLetter(str) {
////	// Разбиваем строку на массив
////	// Разбитие происходит по символу пробел - " "
////	var arr = str.split(' ');
////	var newArr = [];
////
////	// Создаем цикл что будет длиться вплоть 
////	// до количества элементов в массиве arr
////	for(var x = 0; x < arr.length; x++)
////		// В каждой итерации добавляем новый элемент в массив newArr
////		// В качестве нового элемента помещается по одному элементу из массива arr
////		// Каждый элемент в массиве arr это отдельное слово,
////		// поэтому мы обращаемся к элементу, берем его первый символ charAt(0)
////		// и приводим его к верхнему регистру toUpperCase().
////		// Далее мы к этому символу добавляем оставшееся слово, 
////		// но удаляем из него первый символ при помощи slice(1).
////		newArr.push(arr[x].charAt(0).toUpperCase() + arr[x].slice(1));
////	// В конце объединаем получившийся массив в строку и эту строку возвращаем из функции
////	return newArr.join(' ');
////}
////
////console.log(upFirstLetter("все в верхний регистр"));
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Количество секунд<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет выводить количество пройденных секунд в консоль с момента загрузки страницы. 
Функция должна вызываться каждую секунду.
*/

/*Решение в решебнике:
////var count = 0;
////function seconds() { 
////  count++;
////  console.log ("Прошло " + count + " секунд!");
////}
////
////// Для реализации такой функции стоит использовать интервал
////// Вызываем функцию seconds каждые 1000 миллисекунд или же 1 секунду
////setInterval(seconds, 1000);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №6: Правильное окончание для слов<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет возвращать правильное окончание количеству лет. 
Например: при вводе числа 1 функция будет добавлять слово «год» (чтобы получилось 1 год), при вводе 2 – 2 года, при вводе 5 – 5 лет и т. д.

*/

/*Решение в решебнике:
////function ending(num, words) {
////	// Представим что у нас число 2000.
////	// При получении остатка от 100 мы получим 20
////	// В условие мы это проверяем и если число было большим за 2000, 
////	// то мы от него в последствие получаем еще значение при делении на 10
////	num = num % 100;
////	if (num > 19)
////		num = num % 10;
//// 
////	// Таким образом по итогу мы получили число в промежутке от 1 до 19
//// 
////	// Теперь мы можем проверить это число 
//// 
////	switch (num) {
////		// Если 1, то первое слово из массива
////		case 1:
////			return(words[0]);
////			break;
////		// 2, 3 и 4 берем второе значение из массива
////		case 2: case 3: case 4:
////			return(words[1]);
////			break;
////		default: // Для остального берем 3 значение из массива
////			return(words[2]);
////	}
////}
////
////// Тестируем нашу функцию
////var arr = new Array('год', 'года', 'лет');
////console.log("23 " + ending (23, arr));
////console.log("1 " + ending (1, arr));
////console.log("18 " + ending (18, arr));
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №7: Подсчет всех чисел<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет считать сумму всех отдельных чисел числа, например:
// Есть число 345
// Функцая вернет 12, так как сумма отдельно взятого каждого элемента будет равна 12
Число может вводить сам пользователь.
*/

/*Решение в решебнике:
////function summ (num) { 
////   var sum = 0;  
////   // Создаем цикл, который выполниться столько же раз, 
////   // сколько отдельных чисел в числе от пользователя
////   for (var i = 0; i < num.length; i++)
////      // Получаем каждое из чисел.
////      // Для этого обрезаем число при помощи функции substr()
////      // Преобразовываем значение в число
////      // и добавляем к сумме
////      sum += parseInt(num.substr(i, 1));
////  return sum;
////}
////
////// Получаем число и вызываем функцию
////var num = prompt("Введите число:");
////console.log("Сумма всех чисел в числе " + num + " равна: " + summ(num));
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №8: Работа с массивами<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет принимать массив данных и выводить на экран первый и второй элемент этого массива.

Пример выполнения функции:
{5, 10, 15, 20, 25}
// На экран будет выведено 5 и 10
*/

/*Решение в решебнике:
////// Принимаем массив
////function getNewArray(arr) {
////    // Выводим первый и второй элемент
////    console.log("Первый элемент: " + arr[0] + ", последний элемент: " + arr[1]);
////}
////
////// Создаем простой массив
////var a = new Array(5, 10, 15, 20, 25);
////// Передаем его в функцию
////getNewArray(a);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №9: Округление просмотров<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет округлять четырехзначные числа, заменяя все цифры, стоящие справа от разряда числа, буквой «К». Число менее тысячи будет выводиться без изменений.
// Передаем число 1272
// Получаем - 1.2К
*/

/*Решение в решебнике:
////// Функция что принимает в параметре число
////function views(views) {
////    // Если число менее 1000, то возвращаем его без изменений
////    if (views < 1000) {
////        console.log(views);
////        return;
////    }
////
////    // Делим число на 1000, чтобы получить лишь тысячи в числе
////    var hundreds = views / 1000;
////    // Умножаем и делим на 10, чтобы получить дробные числа после точки
////    console.log(Math.round(hundreds * 10.0) / 10.0  + "K");
////}
////
////views(1272);
////views(19334);
////views(936);
*/

}

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Работа с HTML'</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Умножение чисел<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте форму с двумя текстовыми полями и кнопкой «Умножить».
При нажатии на кнопку получите значения из полей и поместите результат умножение чисел в текстовую надпись с идентификатором «result».
*/
let htmlMnoj_1	= document.querySelector(".input");
let htmlMnoj_2	= document.querySelector(".input");

/*Решение в решебнике:
////HTML код для формы полей:
////<form>
////	Первое число : <input id="first_num" /><br>
////	Второе число: <input id="second_num" /><br>
////	<input type="button" onClick="mult ()" Value="Умножить" />
////</form>
////<p id="result"></p>
////
////JavaScript код:
////function mult () {
////	// Получаем первое число
////	num1 = document.getElementById("first_num").value;
////	// Получаем второе число
////	num2 = document.getElementById("second_num").value;
////	// Помещаем результат в поле с ID «result»
////	document.getElementById("result").innerHTML = "Результат: " + (num1 * num2);
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Изменение текста<b> </b></h3><hr><br>"
);
/*Текст задания: 
При нажатии на кнопку измените размер шрифта в кнопке, её цвет и шрифт. 

Код для кнопки:
<button id="btnStyle" onclick="btnStyle ()">Изменить</button>
*/

/*Решение в решебнике:
////function btnStyle () {
////	// Выбираем нужный элемент
////	var textChange = document.getElementById("btnStyle");
////	// Меняем размер шрифта
////	textChange.style.fontSize = "15px";
////	// Меняем шрифт
////	textChange.style.fontFamily = "Comic Sans MS";
////	// Меняем цвет
////	textChange.style.color = "blue";
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Вывод даты и времени<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте кнопку, при нажатии на которую будет выводиться дата и время в пустой абзац.
Пример:
(Нажмите чтобы посмотреть дату и время - кнопка)
Wed Mar 22 2023 11:34:14 GMT+0300 (Москва, стандартное время)
*/

/*Решение в решебнике:
////Вам необходимо прописать следующий HTML код:
////<button type="button"
////onclick="document.getElementById('time_show').innerHTML = Date()">
////Нажмите чтобы посмотреть дату и время</button>
////
////<p id="time_show"></p>
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Замена заголовка<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте заголовок 3 уровня и добавьте к нему идентификатор со значением «heading». 
Пропишите JS код, чтобы при запуске программы текст в заголовке менялся «Новый заголовок».
*/

/*Решение в решебнике:
////<h3 id="heading">Заголовок</h3>
////
////<script>
////// Код сработает при загрузке страницы
////// Выбираем нужный элемент
////var element = document.getElementById("heading");
////// Помещаем в него новый текст
////element.innerHTML = "Новый заголовок";
////</script>
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Верхний регистр<b> </b></h3><hr><br>"
);
/*Текст задания: 
На HTML страницу добавьте поле для ввода текста.
При вводе текста он моментально должен преобразовываться в верхний регистр.

*/

/*Решение в решебнике:
////<script>
////function upperCaseFunct() {
////	// Находим нужный элемент
////	var x = document.getElementById("input_name_field");
////	// В качестве нового значения берем данные из поля
////	// и преобразовываем их в верхний регистр
////	x.value = x.value.toUpperCase();
////}
////</script>
////
////<!-- вызываем функцию при вводе данных в поле -->
////Ваше имя: <input type="text" id="input_name_field" oninput="upperCaseFunct()">
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №6: Изменение заголовка<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, что сделает мигающий title для страницы. 
Пример ниже:
(мигающий тайтл: Программирование/Сообщество itProger)
*/

/*Решение в решебнике:
////var isOldTitle = true;
////var oldTitle = "Программирование";
////var newTitle = "Сообщество itProger";
////
////function changeTitle() {
////	// Меняем title в зависимости от переменной
////    document.title = isOldTitle ? oldTitle : newTitle;
////    isOldTitle = !isOldTitle;
////}
////
////// Вызываем функцию каждые 700 миллисекунд 
////setInterval(changeTitle, 700);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №7: Лимит символов<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте текстовое поле, в которое можно будет ввести максимум 25 символов. Это ограничение сделайте при помощи JavaScript. 
HTML код:
<form> 
	<label>Максимум 25 символов:</label><br> 
	<textarea id="textarea"></textarea> 
	<span id="rchars">25</span> символов осталось.
</form>

Пример:
Максимум 25 символов:
Привет
19 символов осталось. 
*/

/*Решение в решебнике:
////
////Необходимый HTML код:
////<form> 
////	<label>Максимум 25 символов:</label><br> 
////	<textarea onkeyup="checkCharacters()" id="textarea"></textarea> 
////	<span id="rchars">25</span> символов осталось.
////</form>
////
////Решение JavaScript функция:
////function checkCharacters() {
////	var maxLength = 25; // Максимальное количество символов
////	// Получаем введенные символов и считаем их количество
////	var textlen = maxLength - document.getElementById("textarea").value.length; 
////	// Записываем сколько еще осталось
////	document.getElementById("rchars").innerHTML = textlen;
////	// Отслеживаем количество символов в поле
////	// Если более или равно максимальному значению, 
////	// то обрезаем строку от 0 и до максимального количества символов
////	if(textlen <= 0)
////		document.getElementById("textarea").value = document.getElementById("textarea").value.substr(0, maxLength);
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №8: Работа со множеством элементов<b> </b></h3><hr><br>"
);
/*Текст задания: 
При помощи JavaScript возьмите значения из всех тегов «P» в HTML документе. К каждому тегу в конец текста добавьте точку.
HTML теги:
<p>Первый абзац</p>
<p>Второй абзац</p>
<p>Третий абзац</p>
*/

/*Решение в решебнике:
////// Вызываем функцию
////changeAllParagraphs();
////	
////function changeAllParagraphs() {
////	var objects = document.getElementsByTagName("p");
////	// Здесь перебираем каждый элемент и работаем с ними
////	for(var i = 0; i < objects.length; i++)
////		// Обращаемся к элементу и в качестве значения добавляем весь текст плюс точку
////		objects[i].innerHTML = objects[i].innerHTML + ".";
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №9: Добавление стилей<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте HTML кнопку при нажатии на которую к блоку будут добавляться стили.
Необходимо чтобы к блоку добавлялись следующие стили:
.new_style {
	color: #fff;
	background: grey;
	font-size: 1em;
	width: 90%;
	padding: 5%;
}

Сделайте добавление этих стилей при помощи добавления класса new_style к объекту, а также при помощи добавления каждого из свойств по отдельности.
*/

/*Решение в решебнике:
////Создайте кнопку и пустой блок на HTML:
////<div id="some_block"></div>
////<button onclick="changeStyle()">Добавить стили</button>
////
////Пропишите добавление стилей через добавление целого класса сразу:
////function changeStyle() {
////	document.getElementById("some_block").classList.add("new_style");
////}
////
////Тут мы добавляем сразу весь класс new_style со всеми его свойствами.
////Теперь добавим каждое свойство по отдельности. Это можно сделать через объект style:
////function changeStyle() {
////	// Сначала получаем свойство style
////	var block = document.getElementById("some_block").style;
////	// и далее добавляем различные стили
////	block.color = "#fff";
////	block.background = "grey";
////	block.fontSize = "1em";
////	block.width = "90%";
////	block.padding = "5%";
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Условные операторы'</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Проверка на возраст<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте переменную, в которой будет указан возраст пользователя.
Выполните следующие условия проверки:
    если возраст больше 18 – на экран выводиться предложение: «Вам уже все можно»;
    если возраст равен 18 – «Ура, Вам 18 лет!»;
    если меньше 18 – «Вы еще слишком молоды».

*/

/*Решение в решебнике:
////var age = 19;
////if(age > 18)
////	console.log("Вам уже все можно");
////else if(age == 18)
////	console.log("Ура, Вам 18 лет!");
////else
////	console.log("Вы еще слишком молоды");
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Небольшой калькулятор<b></b></h3><hr><br>"
);
/*Текст задания: 
Попросите пользователя ввести две числовые переменные. 
Далее пользователю выводиться меню:
Что вы хотите сделать? 
1. Добавить;
2. Отнять;
0. Ничего.
В зависимости от того какую цифру введет пользователь, вы применяете подходящее действие к числовым переменным.
*/

/*Решение в решебнике:
////// Получаем две переменные от пользователя
////var a = parseInt(prompt("Введите первое число: "));
////var b = parseInt(prompt("Введите второе число: "));
////
////// Получаем действие от пользователя
////var action = parseInt(prompt("Что вы хотите сделать? 1. Добавить, 2. Отнять, 0. Ничего:"));
////
////// Проверяем действие и выполняем математические операции
////if (action == 1)
////	console.log(a + b);
////else if (action == 2)
////	console.log(a - b);
////else if (action == 0)
////	console.log("Вы выбрали ничего не делать");
////else
////	console.log("Необходимо вписать верный вариант");
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Определение дня недели<b></b></h3><hr><br>"
);
/*Текст задания: 
Введите число от 1 до 7, которое будет соответствовать дню недели.
Например: при вводе числа 1 на экране будет выводиться «Понедельник» и т. д.
Сделайте подобную проверку при помощи оператора switch case.

*/

/*Решение в решебнике:
////var day = "";
////// Получаем число от пользователя
////var num = parseInt(prompt("Число от 1 до 7: "));
////
////// Выполняем проверку на число
////switch (num) {
////	case 1: day = "Понедельник"; break;
////	case 2: day = "Вторник"; break;
////	case 3: day = "Среда"; break;
////	case 4: day = "Четверг"; break;
////	case 5: day = "Пятница"; break;
////	case 6: day = "Суббота"; break;
////	case 7: day = "Воскресенье"; break;
////	default:day = "Неверное число";
////}
////
////console.log(day);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Подсчет прибыли<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте программу, которая будет рассчитывать сальдо торгового баланса. В случае положительного сальдо (превышение экспорта над импортом) просчитывать прибыль, а в случае отрицательного сальдо (превышение импорта над экспортом) рассчитать потери.
Числа вводятся пользователем с клавиатуры.
Например:
// Переменные: потери - 750 и прибыль - 345
// Программа выдаст результат:
"Ваши убытки составили: 405"
// В случае прибыли будет подсчитана прибыль
*/

/*Решение в решебнике:
////var pay = 752, profit = 843, res;
////if(pay > profit) {  
////    res = pay - profit;  
////    console.log("Ваша прибыль составила: " + res);  
////}  
////else if(profit > pay) {  
////    res = profit - pay;  
////    console.log("Ваши убитки составили: " + res);  
////}  
////else   
////    console.log("Нет ни прибыли, ни убытков");
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Проверка переменных<b></b></h3><hr><br>"
);
/*Текст задания: 
Проверить две переменные на их четность. Если обе четные, то выдается значение true, иначе false.
Важно: проверку необходимо выполнить при помощи сокращенной формы if else.

*/

/*Решение в решебнике:
////// Две переменные
////var n1 = 4, n2 = 20;
////// Сокращенная форма проверки
////var isEven = ((n1 % 2 == 0) && (n2 % 2 ==0)) ? true : false;
////
////// Вывод результата
////console.log(isEven);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №6: Сравнение строк<b></b></h3><hr><br>"
);
/*Текст задания: 
Напишите программу, которая будет сравнивать количество символов в двух произвольных строках, введенных пользователем.
Пример:
// Первая строка: Обычная строка
// Вторая строка: Уже другая строка
// результат: Обычная строка меньше чем Уже другая строка
*/

/*Решение в решебнике:
////var str1 = " ", str2 = " "; // Изначально создаем строки
////// Далее добавляем значения в них
////str1 = prompt("Первая строка: ");
////str2 = prompt("Вторая строка: ");
////
////// Сравниваем по количеству символов
////if (str1.length < str2.length)
////  console.log(str1 + " меньше чем " + str2);  
////else if (str1.length == str2.length)
////    console.log(str1 + " равна строке " + str2);  
////else
////    console.log(str1 + " больше чем " + str2); 
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №7: Камень, ножницы, бумага<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте игру «Камень, ножницы, бумага». Оба игрока должны ввести слово камень, ножницы или бумага и в зависимости от введенного слова программа будет определять победителя и выводить информацию об этом на экран.
Сделайте сравнение выбранных данных в виде функции, которая будет возвращать результат.
Требование: игроки будут вводить данные используя prompt. Вам необходимо сравнивать данные и определять кто выиграл.
Помните правила:
    Камень бьет ножницы;
    Ножницы бьют бумагу;
    Бумага бьет камень.

*/

/*Решение в решебнике:
////// Получаем от пользователей данные
////var user1 = prompt("Как зовут первого игрока?");
////var user2 = prompt("Как зовут второго игрока?");
////
////// Получаем выбор каждого из игроков
////var user1_answer = prompt(user1 + ", вы хотите выбрать камень, бумагу или ножницы?");
////var user2_answer = prompt(user2 + ", вы хотите выбрать камень, бумагу или ножницы?");
////
////// Создаем функцию для сравнения результатов
////function compare(u1, u2) {
////	// Если значения равны, то ничья
////	if(u1 == u2)
////		return("Ничья!");
////	// Если первый игрок ввел «камень»,
////	else if(u1 == 'камень')
////		// а второй игрок ввел «ножницы»,
////		// то пишем победу для первого игрока
////		if(u2 == 'ножницы')
////			return("Камень выиграл!");
////		// или же если второй игрок ввел не ножницы, 
////		// то значит это будет бумага и второй игрок победил
////		else
////			return("Бумага выиграла!");
////			
////	// Аналогичные действия с другими вариантами
////	else if(u1 == 'ножницы')
////		if(u2 == 'бумага')
////			return("Ножницы выиграли!");
////		else
////			return("Камень выиграл!");
////	else if(u1 == 'бумага')
////		if(u2 == 'камень')
////			return("Бумага выиграла!");
////		else
////			return("Ножницы выиграли!");
////	else
////		return("Неверный ввод! Необходимо ввести одно из: камень, бумага или ножницы");
////}
////
////// Выводим результаты
////console.log(compare(user1_answer, user2_answer));
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Всплывающие окна'</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Простейшее окно<b> </b></h3><hr><br>"
);
/*Текст задания: 
Узнайте сколько лет пользователю. После этого выведите информацию про возраст в новом всплывающем окне.
*/

/*Решение в решебнике:
////var years = prompt("Сколько вам лет?", 32);
////alert("Вам " + years + " лет!");
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Окно информации<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте окно с информацией, в котором выведите текст: «Сегодня отличная погода на улице».
*/

/*Решение в решебнике:
////Для создания всплывающих окон с информацией используйте функцию alert():
////alert("Сегодня отличная погода на улице");
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Окно информации<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте три переменные: имя, возраст, есть ли машина. Попросите пользователя вводить данные в эти переменные через всплывающее окно.
Создайте еще одно всплывающее окно, которое выведет информацию про пользователя со всеми значениями, которые он ввел, пример: "Имя: значение, возраст: значение. У пользовать есть / нет машина". 
Последняя фраза зависит от того, что ввел пользователь в крайнюю переменную. Если ввел слово "Да", то пишите слово "есть", если ввел "Нет", то пишите слово "нет".
*/

/*Решение в решебнике:
////Для создания всплывающих окон, которые получат информацию от пользователя используйте функцию prompt(). После этого запишите все значения в переменные и выведите это все через alert:
////var name = prompt("Как вас зовут?", "Человек");
////var age = prompt("Сколько вам лет?");
////var car = prompt("У вас есть машина (Да/Нет)?");
////
////if(car == "Да")
////	car = "есть машина";
////else
////	car = "нет машины";
////
////var text = "Имя: " + name + ", возраст: " + age + ". У пользовать " + car + ".";
////alert(text);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Пользовательское соглашение<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте окно, что будет запрашивать пользователя: «Согласны ли вы с пользовательским соглашением?».
Если пользователь отвечает что Ок, то сделайте фон страницы зеленого цвета, если отвечает что нет, то сделайте задний фон страницы красного цвета.
PS: чтобы поменять задний фон страницы добавьте специальные стили к тегу body.

*/

/*Решение в решебнике:
////Для получение ответа Да/Нет от пользователя проще всего использовать функцию confirm(). 
////После получения значения используйте условный оператор и в зависимости от значения измените задний фон страницы:
////var otvet = confirm("Согласны ли вы с пользовательским соглашением?");
////
////// Изначально цвет пускай будет красный
////var color = "red";
////if(otvet == true) // Если пользователь согласен,
////	color = "green"; // то цвет будет зеленый
////
////// Меняем задний фон страницы
////document.body.style.background = color;
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Угадывание числа<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте любую переменную с числом. Пользователь вводит число с клавиатуры и если оно не равно вашему числу, то вы заново спрашиваете пользователя до тех пор пока он не угадает.
PS: пользователь будет вводить число через prompt.

*/

/*Решение в решебнике:
////var rand = 8;
////var input = prompt("Введите число:");
////
////// Создаем цикл, который будет работать до тех пор
////// пока пользовательское число не будет равно вашему числу
////while (input != rand) {
////	// В цикле каждый раз просим пользователя ввести число
////	console.log("Вы не угадали! Попробуйте еще..");
////	input = prompt("Введите число:");
////}
////console.log("Ура, вы угадали. Это число: " + input);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Большие задания'</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Форма обратной связи<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте форму обратной связи, которая будет выглядеть примерно так:
(форма
имя
email
телефон
сообщение
...не все поля заполнены
кнопка
отправить)

Над стилями можете не заморачиваться, главное пропишите такие же поля, а также сделайте проверку этой формы. Вам необходимо сделать такие вещи, как:
    Проверка на заполненность всех полей. Если какое-либо поле не заполнено, то вывести соответсвующие оповещение;
    Проверить, есть ли в поле email значок собачки (@);
    Все ошибки выводить под формой (на фото есть пример);
    Если поле сообщение менее 50 символов или более 400, то выдавать ошибку;
    При успешной проверке формы сделайте все поля с зеленой обводкой, очистите их, а также на кнопке напишите "Готово".

Всё необходимо сделать используя чистый JavaScript код.
*/

/*Решение в решебнике:
////Полностью весь готовый код с комментариями: 
////<!DOCTYPE html>
////<html lang="en">
////<head>
////	<meta charset="UTF-8">
////	<title>Полноценная форма</title>
////	<style>
////	body {
////		background: #fafafa;
////	}
////	
////	main {
////		background-color: #fafafa;
////	    border: 1px solid #d2d2d2;
////	    -webkit-box-shadow: 0 1px 0 1px #e5e7e8;
////	    -moz-box-shadow: 0 1px 0 1px #e5e7e8;
////	    box-shadow: 0 1px 0 1px #e5e7e8;
////	    font-size: 1.1em;
////	    color: #3e3e3e;
////	    padding: 3%;
////	    float: left;
////	    width: 50%;
////	    margin: 20px 22%;
////	}
////		
////	h2 {
////	    font-weight: lighter;
////	    font-size: 1.4em;
////	    font-family: 'Roboto Slab',serif;
////	    border-bottom: 2px solid #4786a3;
////		display: inline-block;
////	    color: #4786a3;
////	    padding: 0 5px;
////	}
////	
////	form .label {
////	    font-size: 1.2em;
////	    margin-left: 10px;
////	    color: #737272;
////	    margin-bottom: 5px;
////	    display: block;
////	    font-family: 'Roboto Slab',serif;
////	    cursor: text;
////	}
////	
////	form input, form textarea {
////	    margin-bottom: 10px;
////	    padding: 10px 2%;
////	    border-radius: 7px;
////	    border: 2px solid silver;
////	    font-size: .9em;
////	    width: 270px;
////	    color: #4a4a4a;
////	}
////	
////	form textarea {
////		resize: vertical;
////		max-height: 500px;
////		min-height: 200px;
////	}
////	
////	#messageErrorUser {
////		color: #bf5858;
////		font-family: 'Roboto Slab',serif;
////		font-size: 1.1em;
////		display: none; // Делаем так, что изначально поле невидимое 
////	}
////	
////	.btn {
////	    border: 2px solid #9c3e30;
////	    font-size: 1em;
////	    margin-top: 20px;
////	    background: #ec6550;
////	    border-radius: 5px;
////	    cursor: pointer;
////	    color: #fff;
////	    display: block;
////	    padding: 7px 12px;
////	    font-family: 'Roboto Slab',serif;
////	}
////	
////	.btn:hover {
////		border: 2px solid #88372b;
////		background: #ba5242;
////	}
////	</style>
////</head>
////<body>
////	<main>
////		<h2>Форма обратной связи</h2>
////		
////		<form method="post">
////			<label class="label" for="name">Имя</label>
////			<input type="text" id="name" placeholder="Введите имя"><br>
////			<label class="label" for="email">Email</label>
////			<input type="email" id="email" placeholder="Ваш email"><br>
////			<label class="label" for="telephone">Телефон</label>
////			<input type="tel" id="telephone" name="telephone" placeholder="Ваш телефон"><br>
////			<label class="label" for="message">Сообщение</label>
////			<textarea id="message" name="message" placeholder="Введите сообщение"></textarea>
////			<div id="messageErrorUser"></div>
////			<!-- Кнопка должна быть button, иначе она будет перезагружать страницу -->
////			<button type="button" class="btn" onclick="checkForm()" id="send">Отправить</button>
////		</form>
////	</main>
////<script>
////function checkForm () { // Отслеживаем нажатие на кнопку
////	var name = document.getElementById("name"); // Принимаем все данные и записываем в переменные
////	var email = document.getElementById("email");
////	var telephone = document.getElementById("telephone");
////	var message = document.getElementById("message");
////
////	var error = ""; // Переменная для записи ошибки
////	// Если какие-то поля пустые, то записываем ошибку в переменную
////	if(name.value == "" || email.value == "" || telephone.value == "") // Проверка данных
////		error = "Не все поля заполнены";
////	else if (!email.value.includes('@')) // Проверка на наличие символа @
////		error = "Поле email заполнено неверно";
////	// Проверка на длину сообщения
////	else if(message.value.length < 50 || message.value.length >= 400)
////		error = "Длина сообщения должна быть в пределах от 50 до 400 символов";
////	
////	var errorMessageBlock = document.getElementById("messageErrorUser");
////	
////	// Если переменная содержит текст, то есть ошибка и мы её выводим
////	if(error != "") {
////		errorMessageBlock.style.display = "block"; // Показываем поле
////		errorMessageBlock.innerHTML = error; // Выводим ошибку
////		return false; // Выходим с функции
////	}
////	
////	// Если не вышли с функции, значит ошибок нет
////	// Отображае успешное добавление
////	var color = "#699853";
////	name.value = "";  // Пустое значение в поле Имя
////	name.style.borderColor = color; // Меняем цвет обводки
////	
////	email.value = ""; // Пустое значение
////	email.style.borderColor = color; // Меняем цвет обводки
////	
////	telephone.value = ""; // Пустое значение
////	telephone.style.borderColor = color; // Меняем цвет обводки
////	
////	message.value = ""; // Пустое значение
////	message.style.borderColor = color; // Меняем цвет обводки
////	
////	// Скрываем ошибку
////	errorMessageBlock.style.display = "none";
////	// Меняем текст на кнопке
////	document.getElementById("send").innerHTML = "Готово";
////}
////</script>
////</body>
////</html>
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Добавление комментариев<b></b></h3><hr><br>"
);
/*Текст задания:
В задании "Форма обратной связи" вам необходимо было создать форму и добавить обработку к этой форме. 
Для этого задания возьмите ту форму за основу. Сделайте так, чтобы при нажатии на кнопку добавить все данные брались из формы, проверялись на правильность и далее добавлялись в качестве нового комментария в блок с комментариями.
Пример:
...форма
Комментарий

Изначально блок должен быть пустым. При добавлении комментария в него помещается новый DIV с информацией полученной из формы. Каждый новый блок с комментарием должен добавляться в начало списка всех комментариев.
Реализовать все исключительно используя JavaScript.
*/

/*Решение в решебнике:
////В решении задания разместим лишь код, который нужен для добавления комментариев. Стили для комментариев: 
////#comments {
////	width: 96%;
////	border-top: 2px solid #505050;
////	float: left;
////	margin-top: 20px;
////	padding: 2%;
////}
////
////.comment {
////	background: #e8e8e8;
////	padding: 10px;
////	border-radius: 5px;
////	margin-bottom: 10px;
////}
////
////Весь HTML формы: 
////<main>
////	<h2>Добавление комментария</h2>
////	
////	<form method="post">
////		<label class="label" for="name">Имя</label>
////		<input type="text" id="name" placeholder="Введите имя"><br>
////		<label class="label" for="email">Email</label>
////		<input type="email" id="email" placeholder="Ваш email"><br>
////		<label class="label" for="telephone">Телефон</label>
////		<input type="tel" id="telephone" name="telephone" placeholder="Ваш телефон"><br>
////		<label class="label" for="message">Сообщение</label>
////		<textarea id="message" name="message" placeholder="Введите сообщение"></textarea>
////		<div id="messageErrorUser"></div>
////		<!-- Кнопка должна быть button, иначе она будет перезагружать страницу -->
////		<button type="button" onclick="addComments()" class="btn" id="send">Отправить</button>
////	</form>
////	<div id="comments">
////		<h3>Комментарии</h3>
////		<!-- Именно в блок allComments мы будем помещать все комментарии -->
////		<div id="allComments"></div>
////	</div>
////</main>
////
////Весь jQuery и JavaScript код: 
////function addComments () { // Отслеживаем нажатие на кнопку
////	var name = document.getElementById("name"); // Принимаем все данные и записываем в переменные
////	var email = document.getElementById("email");
////	var telephone = document.getElementById("telephone");
////	var message = document.getElementById("message");
////
////	var error = ""; // Переменная для записи ошибки
////	// Если какие-то поля пустые, то записываем ошибку в переменную
////	if(name.value == "" || email.value == "" || telephone.value == "") // Проверка данных
////		error = "Не все поля заполнены";
////	else if (!email.value.includes('@')) // Проверка на наличие символа @
////		error = "Поле email заполнено неверно";
////	// Проверка на длину сообщения
////	else if(message.value.length < 50 || message.value.length >= 400)
////		error = "Длина сообщения должна быть в пределах от 50 до 400 символов";
////	
////	var errorMessageBlock = document.getElementById("messageErrorUser");
////	
////	// Если переменная содержит текст, то есть ошибка и мы её выводим
////	if(error != "") {
////		errorMessageBlock.style.display = "block"; // Показываем поле
////		errorMessageBlock.innerHTML = error; // Выводим ошибку
////		return false; // Выходим с функции
////	}
////	
////	// Если не вышли с функции, значит ошибок нет
////	// Добавление комментария
////	var comment = "<div class='comment'><b>Email:</b> " + email.value + "<br><b>Имя:</b> " + name.value + "<br><b>Телефон:</b> " + telephone.value + "<br>" + message.value + "</div>";
////	// Добавлям новый комментарий в начало и после него добавляем все прошлые
////	document.getElementById("allComments").innerHTML = comment + document.getElementById("allComments").innerHTML;
////	
////	// Отображае успешное добавление
////	var color = "#699853";
////	name.value = "";  // Пустое значение в поле Имя
////	name.style.borderColor = color; // Меняем цвет обводки
////	
////	email.value = ""; // Пустое значение
////	email.style.borderColor = color; // Меняем цвет обводки
////	
////	telephone.value = ""; // Пустое значение
////	telephone.style.borderColor = color; // Меняем цвет обводки
////	
////	message.value = ""; // Пустое значение
////	message.style.borderColor = color; // Меняем цвет обводки
////	
////	// Скрываем ошибку
////	errorMessageBlock.style.display = "none";
////	// Меняем текст на кнопке
////	document.getElementById("send").innerHTML = "Готово";
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Подчёркнутый текст<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет перебирать все параграфы и делать подчёркнутыми все слова в параграфе. 
Важно: сделайте чтобы подчеркнутыми были лишь слова. Пробелы не должны быть подчёркнутыми.

Пример:
Пример текста
Пример  текста

*/

/*Решение в решебнике:
////Решение задания HMTL код: 
////<p>Первый абзац</p>
////<p>Второй абзац</p>
////<p>Третий абзац</p>
////<button onclick="cursorWords('p')">Сделать подчёркнутым</button>
////
////Необходимый jQuery код:
////function cursorWords(id) {
////	// Разделяем текст по пробелам и получаем все слова
////	var objects = document.getElementsByTagName(id); // Получаем массив всех объектов
////	
////	var text_words = "";
////	// Благодаря getElementsByTagName мы получаем массив данных
////	// Этот массив мы перебираем через цикл, таким обрзом получаем каждый отдельный элемент
////	for (var i = 0; i < objects.length; i++) { 
////		// Берем у каждого элемента текст (Только текст без HTML)
////		text_words = objects[i].innerText;
////		
////		// Разделяем текст по пробелам и получаем лишь слова, без пробелов
////		words = text_words.split(' ');
////	   
////		// Очищаем весь элемент и заполяем данными через функцию
////		var new_words = ""; // Сюда будут помещены новые подчёркнутые слова
////		
////		// Перебираем все слова
////		for (j = 0; j < words.length; j++)
////			// Добавяем их, но делаем их подчёркнутыми
////			new_words += '<u>' + words[j] + '</u> ';
////		
////		// Помещаем новый текст вместо текста ранее (берем элемент по индексу - [i])
////		document.getElementsByTagName(id)[i].innerHTML = new_words;
////	}
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Изменение цвета<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте функцию, которая будет делать задний фон объекта черным, а через 3 секунды сделайте цвет прежним (как он был изначально).
Функция должна принимать параметр "название класса" и на основе этого названия будут применяться стили конкретно для всех элементов с этим классом.

*/

/*Решение в решебнике:
////Необходимый HTML: 
////<p class="text">Первый абзац</p>
////<p class="text">Второй абзац</p>
////<p class="text">Третий абзац</p>
////<button onclick="newColor('text')">Изменить фон</button>
////
////Решение задания JavaScript:
////function newColor(className) {
////	// Получаем массив всех объектов
////	var objects = document.getElementsByClassName(className);
////	for (var i = 0; i < objects.length; i++) 
////		// Устанавливаем задний фон черным для каждого объекта
////		objects[i].style.backgroundColor = "#000";
////
////	setTimeout(function () { // Вызываем таймер, который сработает через 3 секунды
////		// Удаляем атрибут style, так как он был создан при помощи метода css выше
////		// При этом надо перебрать все элементы, ведь с этим классов может быть много объектов
////		var objects = document.getElementsByClassName(className);
////		for (var i = 0; i < objects.length; i++) 
////			objects[i].removeAttribute("style");
////	}, 3000);
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №5: Приложение Список дел<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте приложение "Список дел". Приложение должно получать данные из формы и далее добавлять в список. 
СПИСОК ДЕЛ
поле ... кнопка добавить
1. купить молоко
2.Помыть посуду
3. Постирать вещи

При двойном нажатии на элемент его необходимо удалять из списка.
*/

/*Решение в решебнике:
////Решение задания CSS код:
////form {
////	display: inline-block;
////}
////
////input{
////	padding: 4px 15px 4px 5px;
////}
////
////#button{
////	display: inline-block;
////	background-color:#458abe;
////	color:#ffffff;
////	border-radius: 5px;
////	text-align:center;
////	margin-top:2px;
////	padding: 5px 15px;
////}
////
////HTML код:
////<h2>Список дел</h2>
////<p>Двойной щелчок по пункту для его удаления</p>
////<form name="toDoList">
////	<input type="text" id="list_items">
////</form>
////<div onclick="addItem()">Добавить</div>
////
////<ol id="list"></ol>
////
////Весь jQuery код:
////function addItem() {
////	// Получаем значение
////	var toAdd = document.getElementById("list_items").value;
////	
////	if(toAdd == "") // Если значение в поле пустое, то ничего не делаем
////		return false;
////	
////	//	Добавляем новый элемент в список
////	var list = document.getElementById("list"); // Получили объект
////	// Записываем новый объект в конец + добавляем то что ранее было добавлено
////	// При двойном клике передаем this (этот же) объект (его и будем удалять)
////	list.innerHTML = list.innerHTML + '<li ondblclick="deleteItem(this)">' + toAdd + '</li>';
////	document.getElementById("list_items").value = "";
////}
////
////function deleteItem(object) {
////	// При двойном клике элемент исчезает (удаляется)
////	object.style.display = "none";   
////}
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №6: Делители числа<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте программу, которая будет запрашивать число у пользователя. После ввода числа программа будет выводить список из всех чисел, которые являются делителями числа, введенного пользователем.

К примеру, пользователь вводит число 45 и ему выводиться следующий список:
[1, 3, 5, 9, 15, 45]

Выдался список со всеми числами, которые делятся на 45 без остатка.
*/

/*Решение в решебнике:
////var num = prompt("Узнать количество делителей в числе:");
////
////// Создаем список со всеми числами от 1 до числа, которое ввел пользователь
////var listRange = [];
////for(var i = 0; i < num; i++)
////	listRange[i] = i;
////
////// Создаем пустой список для заполнения дилителями
////var divisorList = "";
////
////// Перебираем все числа из первого списка
////for(var number = 0; number < listRange.length; number++) {
////    // Если число делиться без остатка, значит это и есть делитель этого числа
////    // Такое число помещаем во второй список
////    if(num % number == 0)
////         divisorList += number + ", ";
////}
////
////// Удаление двух последних символов, так как у нас всегда пробел и запятая в конце лишние
////divisorList = divisorList.substring(0, divisorList.length - 2);
////// На выходе получаем список, состоящий из всех делителей введенного числа
////console.log(divisorList);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №7: Числа фибоначи<b></b></h3><hr><br>"
);
/*Текст задания: 
Напишите программу, которая запрашивает у пользователя количество чисел Фибоначчи для генерации, а затем генерирует их.
Обязательно попросите пользователя ввести число чисел в последовательности для генерации. 
Подсказка: последовательность Фибоначчи - это последовательность чисел, где следующее число в последовательности представляет собой сумму двух предыдущих чисел в последовательности. Последовательность выглядит так: 1, 1, 2, 3, 5, 8, 13...

*/

/*Решение в решебнике:
////function fibonacci() {
////    var num = prompt("Как много числе нужно сгенерировать?");
////    var i = 1;
////    var fib = [];
////    if(num == 0)
////        fib = [];
////    else if(num == 1)
////        fib = [1];
////    else if(num == 2)
////        fib = [1,1];
////    else if(num > 2) {
////        fib = [1,1];
////        while(i < (num - 1)) {
////	        // push - позволяет добавить элемент в массив и сдвинуть индекс
////            fib.push(fib[i] + fib[i-1]);
////            i += 1;
////        }
////    }
////    return fib;
////}
////
////console.log(fibonacci());
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №8: Слайдер блоков с информацией<b></b></h3><hr><br>"
);
/*Текст задания: 
Выполните верстку как на фото ниже:
Заголовок по середдине
Слайдбар

Скачать PhotoShop макет блока можно здесь...
Используя чистый JavaScript, без каких-либо библиотек, реализуйте эффект перехода блоков как на изображении ниже:
(пример в виде гифки)
Дополнительно реализуйте адаптивную версию сайта, дабы он смотрелся хорошо на всех типах устройств.
*/

/*Решение в решебнике:
////Вы можете скачать решение по этой ссылке:
////https://itproger.com/download.php?item=js_task_carousel.zip
////В файле вы найдете HTML, CSS, JS и все необходимые материалы к проекту.
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Классы и объекты'</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Класс автомобиль<b> </b></h3><hr><br>"
);
/*Текст задания: 
Создайте класс Автомобиль, который будет состоять из 4 значений:
    Марка автомобиля;
    Уровень бензина;
    Имя водителя;
    На ходу ли автомобиль.

Марка и значение "на ходу ли автомобиль" должны добавляться при создании объекта на основе этого класса.
Создайте несколько функций:
    Функция для установки значения бензина. Значение не может быть меньшим за 0;
    Функция для установки имени водителя. Имя должно состоять только из символов, если есть числа, то не добавляем имя;
    Функция, которая выводит надпись в консоль. Если автомобиль на ходу, то выводиться "а, машина все еще на ходу", иначе - "Нет, машина уже не на ходу".

На основе класса создайте несколько объектов и вызовите функции, которые были прописаны для класса.

*/

/*Решение в решебнике:
////var Car = function (auto_mark, isOnDrive) { // Создание класса
////	this.auto_mark = auto_mark; // При создании объекта сразу добавляем Марку и переменную isOnDrive
////	this.benzin = 0;
////	this.driver_name = "";
////	this.isOnDrive = isOnDrive;
////};
////
////// Создание функции для установки бензина
////Car.prototype = {
////	setBenzin : function(new_value) { // Принимаем новое значение
////		if(new_value < 0) // Если значение меньше 0, то не устанавливаем и выходим из функции
////			return;
////
////		// Устанавливаем значение, если оно больше за ноль
////		this.benzin = new_value;
////	}
////};
////
////// Другой способ записи функции, но по сути всё тоже самое
////Car.prototype.setUserName = function(name) { // Принимаем параметр "Имя"
////	// Проверка которая ищет цифры, если таковы найдены, то выходим из функции
////	if (/d/.test(name))
////		return;
////
////	this.driver_name = name;
////};
////
////Car.prototype.getIsOnDrive = function() {
////	if(this.isOnDrive) // Если переменная True, то выводим что на ходу
////		console.log("Да, машина все еще на ходу");
////	else // Иначе выводим что не на ходу
////		console.log("Нет, машина уже не на ходу");
////};
////
////// Создаем объект и выводим некоторые данные
////var bmw = new Car("BMW M3", true);
////bmw.setBenzin(30);
////bmw.setUserName("Георгий");
////bmw.getIsOnDrive();
////console.log(bmw.driver_name);
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Конструктор класса<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте класс, что будет выводить сообщение: «Класс Words был создан!». 
Такое сообщение должно выводиться каждый раз при создании объекта (экземпляра) класса.

*/

/*Решение в решебнике:
////class Words { // Создание класса
////
////	constructor() {
////		console.log("Класс Words был создан!");
////	}
////
////}
////
////// Создаем объект и сработает сразу конструктор
////let bmw = new Words();
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Простейший класс<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте класс Message.
В классе реализуйте метод introduce. Метод должен выводить сообщение: «Привет, меня зовут Василий», при этом «Василий» это параметр, что передается в конструктор и выводиться позже в функции.

*/

/*Решение в решебнике:
////class Message {	
////	introduce(name) { // Принимаем значение
////		return "Привет, меня зовут " + name;
////	}
////}
////
////// Создаем объект
////let mymessage = new Message();
////console.log(mymessage.introduce("Василий"));
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Класс пользователей<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте класс User, который будет иметь поля: имя и email. Создайте метод в классе через который можно будет вывести все эти данные.
Создайте конструктор, который будет принимать данные при создании объекта и устанавливать их в переменные.
Добавьте два объекта, установите для них значения и выведите всё при помощи ранее созданного метода.

*/

/*Решение в решебнике:
////class User {
////	constructor(name, email) { // Устанавливает данные про пользователя
////		this.name = name;
////		this.email = email;
////	}
////	
////	// Создание функции для вывода инфорамции
////	getInfo() {
////		console.log("Пользователь: " + this.name);
////        console.log("Его email: " + this.email);
////	}
////}
////
////let admin = new User("Admin", "test@gmail.com");
////admin.getInfo();
////
////let redactor = new User("Редактор", "redactor@gmail.com");
////redactor.getInfo();
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<hr><hr><hr><br><h3>Задания на тему 'Gulp'</h3><hr><hr><br>"
);
bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br>Задания №1: Плагин Uglify<b> </b></h3><hr><br>"
);
/*Текст задания: 
Установите плагин Uglify и создайте задачу, которая будет уменьшать JS код, удаляя из него пробелы и пропуски строк.
Документация по плагину Uglify тут.

*/

/*Решение в решебнике:
////Необходимо изначально установить в проект uglify. В командной строке пропишите:
////	npm install --save-dev gulp-uglify
////
////Далее весь необходимый код в Gulpfile.js:
////var gulp = require('gulp');
////var uglify = require('gulp-uglify');
////
////function cleanJS(done) {
////	gulp.src('./js/index.js')
////	.pipe(uglify())
////	.pipe(gulp.dest('./dist/js/'));
////
////	done();
////}
////
////gulp.task(cleanJS);
////
////В итоге ваш JS файл будет уменьшен и в нем будут удалены все пробелы, а также отступы и пустые строки.
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №2: Работа с CSS<b></b></h3><hr><br>"
);
/*Текст задания: 
Установите плагин uncss, а также csso. Создайте задачу, которая будет использовать оба плагина, удаляя весь дублированный CSS код (uncss), а также очищая код от пробелов и пропусков строк (csso).
Документация по плагину uncss тут.
Документация по плагину csso тут.

*/

/*Решение в решебнике:
////Необходимо изначально установить в проект uncss и csso. В командной строке пропишите:
////npm install --save-dev gulp-uncss
////npm install --save-dev gulp-csso
////
////// Может потребоваться выполнить
////// npm audit fix чтобы пофиксить 
////// возникшие проблемы в проекте
////
////Далее весь необходимый код в Gulpfile.js:
////var gulp = require('gulp');
////var uncss = require('gulp-uncss');
////var csso = require('gulp-csso');
////
////function cssWork(done) {
////	gulp.src('./css/main.css')
////	.pipe(uncss({
////		html: ['index.html', 'posts`.html', 'https://itproger.com']
////		//(вместо '`' вставить '/**/ /* ' без последнего слеша и пробела)
////	}))
////	.pipe(csso())
////	.pipe(rename({suffix: '-new'}))
////	.pipe(gulp.dest('./css/'));
////
////	done();
////}
////
////gulp.task(cssWork);
////В итоге ваш JS файл будет уменьшен и в нем будут удалены все пробелы, а также отступы и пустые строки.
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №3: Создание watch-таска<b></b></h3><hr><br>"
);
/*Текст задания: 
В прошлых заданиях мы просили вас прописать дополнительные плагины к проекту: uglify, uncss и csso.
Создайте функцию, которая будет выполнять их работу через несколько watch-тасков. 

*/

/*Решение в решебнике:
////Сперва, пропишите все функции к плагинам, которые давались в предыдущих заданиях.
////После этого, создайте функцию для отслеживания watch тасков. Пример функции:
////function watchSass() {
////	gulp.watch("./js/`.js", cleanJS);
////	(вместо '`' вставить '**/ /*' без последнего слеша и пробела)
////	gulp.watch("./css/`.css", cssWork);
////	(вместо '`' вставить '**/ /*' без последнего слеша и пробела)
////}
////
////gulp.task(watchAndClean);
////
*/

bodyElement.insertAdjacentHTML(
  "beforebegin",
  "<br><hr><hr>Задания №4: Установка плагинов Gulp<b></b></h3><hr><br>"
);
/*Текст задания: 
Создайте новый проект с новым файлом Gulpfile. Внутри него создайте несколько функций, реализующих такие плагины, как:
    gulp-connect - создает локальный сервер (аналог Browser Sync);
    gulp-autopolyfiller - добавляет необходимые префиксы к JS коду;
    gulp-imagemin - уменьшает размер фотографий в проекте;
    gulp-less - необходим для работы с препроцессором Less.

Установите все плагины в проект и пропишите функции, которые будут обрабатывать каждый из плагинов.
Создайте также watch-такс, постоянно выполняющий все эти плагины в проекте.
Помощь

Запомнить весь код для плагинов сложно, поэтому обращайтесь к официальному сайту npm менеджера. Там вы найдете готовый код, который можно применять для создания всех необходимых функций.
Прежде чем что-то писать в файле, не забудьте установить каждый из плагинов в проект.

*/

/*Решение в решебнике:
////Вы можете скачать решение по этой ссылке:
////href="/download.php?item=big-task-gulpfile.zip"
*/
